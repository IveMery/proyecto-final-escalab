{"version":3,"sources":["webpack://proyecto-final/./src/components/Empty.js","webpack://proyecto-final/./src/components/Stats.js","webpack://proyecto-final/./src/components/TableStats.js","webpack://proyecto-final/./src/views/MyTeam.js","webpack://proyecto-final/./src/assets/animation/gif/batman.gif"],"names":["Empty","width","batman","Stats","useContext","StatsContext","totalStatsHero","createData","name","speed","durability","intelligence","power","combat","strength","TableStats","useStyles","makeStyles","head","background","fontFamily","tablecell","color","tablecellStats","classes","rows","Paper","minWidth","map","row","MyTeam","HeroContext","heroes","ButtonsContext","setShow","useEffect","length","characters","id","paddingBottom","propTypes","bool"],"mappings":"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","file":"src_views_MyTeam_js.bundle.js","sourcesContent":["import React from \"react\";\r\nimport batman from \"../assets/animation/gif/batman.gif\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Title from \"./Title\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\nconst Empty = () => {\r\n  return (\r\n    <ErrorBoundary>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Title variant=\"h6\" gutterBottom>\r\n          Agrega algunos h√©roes o villanos...\r\n        </Title>\r\n        <Box>\r\n          <img style={{ width: \"300px\" }} src={batman} alt=\"batman gif\" />\r\n        </Box>\r\n      </Grid>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Empty;\r\n","import React, { useContext } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TableStats from \"./TableStats\";\r\nimport Title from \"./Title\";\r\nimport { StatsContext } from \"../contexts/StatsContext\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\nconst Stats = () => {\r\n  const { totalStatsHero } = useContext(StatsContext);\r\n  return (\r\n    <ErrorBoundary>\r\n      <>\r\n        <Title align=\"center\" gutterBottom>\r\n          Resumen de Stats\r\n        </Title>\r\n        <Grid container spacing={3} direction=\"row\" justifyContent=\"center\">\r\n          <Grid item lg={9} xs={12}>\r\n            <TableStats totalStatsHero={totalStatsHero} />\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport { Table } from \"@material-ui/core\";\r\nimport { TableBody } from \"@material-ui/core\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport { TableContainer } from \"@material-ui/core\";\r\nimport { TableHead } from \"@material-ui/core\";\r\nimport { TableRow } from \"@material-ui/core\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ErrorBoundary from \"../ErrorBoundary\";\r\n\r\nfunction createData(\r\n  name,\r\n  speed,\r\n  durability,\r\n  intelligence,\r\n  power,\r\n  combat,\r\n  strength\r\n) {\r\n  return { name, speed, durability, intelligence, power, combat, strength };\r\n}\r\n\r\nexport const TableStats = ({ totalStatsHero }) => {\r\n  const useStyles = makeStyles({\r\n    head: {\r\n      background: \"#323232\",\r\n      fontFamily: \"Chewy\",\r\n    },\r\n    tablecell: {\r\n      color: \"white\",\r\n      fontFamily: \"Chewy\",\r\n    },\r\n    tablecellStats: {\r\n      color: \"black\",\r\n      fontFamily: \"Chewy\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const {\r\n    speed,\r\n    strength,\r\n    durability,\r\n    intelligence,\r\n    power,\r\n    combat,\r\n  } = totalStatsHero;\r\n  const rows = [\r\n    createData(\r\n      \"Total Stats\",\r\n      speed,\r\n      durability,\r\n      intelligence,\r\n      power,\r\n      combat,\r\n      strength\r\n    ),\r\n  ];\r\n  return (\r\n    <ErrorBoundary>\r\n      <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n          <TableHead>\r\n            <TableRow className={classes.head}>\r\n              <TableCell className={classes.tablecell}>Stats</TableCell>\r\n              <TableCell className={classes.tablecell} align=\"center\">\r\n                Speed\r\n              </TableCell>\r\n              <TableCell className={classes.tablecell} align=\"center\">\r\n                Durability\r\n              </TableCell>\r\n              <TableCell className={classes.tablecell} align=\"center\">\r\n                Intelligence\r\n              </TableCell>\r\n              <TableCell className={classes.tablecell} align=\"center\">\r\n                Power\r\n              </TableCell>\r\n              <TableCell className={classes.tablecell} align=\"center\">\r\n                Combat\r\n              </TableCell>\r\n              <TableCell className={classes.tablecell} align=\"center\">\r\n                Strength\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  className={classes.tablecellStats}\r\n                >\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tablecellStats}>\r\n                  {row.speed}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tablecellStats}>\r\n                  {row.durability}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tablecellStats}>\r\n                  {row.intelligence}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tablecellStats}>\r\n                  {row.power}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tablecellStats}>\r\n                  {row.combat}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tablecellStats}>\r\n                  {row.strength}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default TableStats;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { HeroContext } from \"../contexts/HeroContext\";\r\nimport Empty from \"../components/Empty\";\r\nimport Characters from \"../components/Characters\";\r\nimport { ButtonsContext } from \"../contexts/ButtonsContext\";\r\nimport Title from \"../components/Title\";\r\nimport propTypes from \"prop-types\";\r\nimport Stats from \"../components/Stats\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst MyTeam = () => {\r\n  const { heroes } = useContext(HeroContext);\r\n  const { setShow } = useContext(ButtonsContext);\r\n\r\n  useEffect(() => {\r\n    setShow(false);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {heroes.length > 0 && (\r\n        <Title gutterBottom align=\"center\" variant=\"h3\">\r\n          Mi equipo\r\n        </Title>\r\n      )}\r\n      <Box p={3}>\r\n        <Grid container direction=\"row\" justifyContent=\"center\">\r\n          {heroes.length > 0 ? (\r\n            heroes.map((characters) => {\r\n              const { id } = characters;\r\n              return <Characters key={id} characters={characters} />;\r\n            })\r\n          ) : (\r\n            <Empty />\r\n          )}\r\n        </Grid>\r\n        <Box style={{ paddingBottom: \"45px\" }}>\r\n          {heroes.length > 0 && <Stats />}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nMyTeam.propTypes = {\r\n  heroes: propTypes.object,\r\n  setShow: propTypes.bool,\r\n};\r\nexport default MyTeam;\r\n","export default __webpack_public_path__ + \"b3cd584929cb67125bb3ad7ec29fad34.gif\";"],"sourceRoot":""}